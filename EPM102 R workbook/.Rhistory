hist(
babies$bweight,
breaksb = b5,
xlabb = "Birthweight (g)"
)
babies <- import("babies.csv")
library(rio)
library(tidyverse)
babies <- import("babies.csv")
counts <- table(babies$hyp)
counts
barplot(counts)
png("practical2-plot1.png")
barplot(counts)
dev.off()
barplot(
counts,
col = c("red", "blue"),
xlab = "Hypertension",
ylab = "Frequency"
)
percent <- counts * 100 / sum(counts)
barplot(
percent,
col = c("red", "blue"),
xlab = "Hypertension",
ylab = "Percentage"
)
hist(babies$bweight)
hist(
babies$bweight,
breaksb = b5,
xlabb = "Birthweight (g)"
)
hist(
babies$bweight,
breaks = b5,
xlabb = "Birthweight (g)"
)
hist(
babies$bweight,
breaks = b5,
xlabb = "Birthweight (g)"
)
hist(
babies$bweight,
breaks = 5,
xlabb = "Birthweight (g)"
)
library(rio)
library(tidyverse)
babies <- import("babies.csv")
babies |>
summarise_all(class)
head(babies, 10)
table(babies$sex, useNA = "ifany")
table(babies$hyp)
table(babies$hyp, babies$sex)
CrossTable(
babies$sex,
babies$hyp,
prop.r = TRUE, # show row proportions
prop.c = FALSE,
prop.t = FALSE,
prop.chisq = FALSE)
babies |>
select(bweight, matage, gestwks) |>
summarise_all(list(mean = mean, med = median, sd = sd))
hist(babies$bweight)
hist(babies$matage)
library(rio)
library(tidyverse)
library(gmodels)
library(rio)
library(tidyverse)
library(gmodels)
library(rio)
library(tidyverse)
library(gmodels)
library(rio)
library(tidyverse)
library(gmodels)
babies <- import("babies.csv")
babies |>
summarise_all(class)
head(babies, 10)
table(babies$sex, useNA = "ifany")
table(babies$hyp)
table(babies$hyp, babies$sex)
CrossTable(
babies$sex,
babies$hyp,
prop.r = TRUE, # show row proportions
prop.c = FALSE,
prop.t = FALSE,
prop.chisq = FALSE)
babies |>
select(bweight, matage, gestwks) |>
summarise_all(list(mean = mean, med = median, sd = sd))
hist(babies$bweight)
hist(babies$matage)
hist(babies$gestwks)
plot(babies$gestwks, babies$bweight)
View(babies)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Desktop/Philip/current/LSHTM_Teaching/EPM202/CSV files/")
library(rio)
library(tidyverse)
library(gmodels)
library(DescTools)
mwanza<-import("mwanza.csv")
mwanza<-mwanza|>
mutate(ed2=recode(ed, `1`=1, `2`=2, `3`=2, `4`=2))
mwanza<-mwanza|>
mutate(age2=recode(age1, `1`=1, `2`=1, `3`=1, `4`=2, `5`=2, `6`=2))
mwanza<-mwanza|>
mutate(age1=recode(age1, `1`=1, `2`=1, `3`=1, `4`=2, `5`=2, `6`=2))
library(rio)
library(tidyverse)
cholesterol<-import("chol1.csv")
cholesterol|>
summarise(mean=mean(chol), median=median(chol), min=min(chol), max=max(chol))
summary(cholesterol$chol)
library(rio)
library(tidyverse)
diabk <- import("diabk.csv")
diabk |>
summarise(mean=mean(chol), median=median(chol), min=min(chol), max=max(chol))
library(rio)
library(tidyverse)
library(gmodels)
# Build a 2Ã—n table then pass successes and totals
tab <- table(mwanza$pa1, mwanza$case)
# Keep ordered categories 1 to 4
freq  <- tab[1:4, "case"]           # number of cases in each category
CrossTable(mwanza$pa1,
mwanza$case,
prop.r = TRUE,
prop.c = FALSE,
prop.t = FALSE,
prop.chisq = FALSE)
tab <- table(mwanza$pa1, mwanza$case)
# rows 1 to 4 only
rows <- as.character(1:4)
freq  <- tab[rows, "1"]      # number of cases
total <- rowSums(tab[rows, ])# total in each category
prop.trend.test(freq, total)
tab <- table(mwanza$pa1, mwanza$case) #create contingency table (rows = categories of pa1. columns = categories of case)
print(tab)
# rows 1 to 4 only
rows <- as.character(1:4)
freq  <- tab[rows, "1"]      # number of cases
total <- rowSums(tab[rows, ])# total in each category
prop.trend.test(freq, total)
tab <- table(mwanza$pa1, mwanza$case) #create contingency table (rows = categories of pa1. columns = categories of case)
print(tab)
# rows 1 to 4 only
rows <- as.character(1:4)
print(rows)
freq  <- tab[rows, "1"]      # number of cases
total <- rowSums(tab[rows, ])# total in each category
prop.trend.test(freq, total)
tab <- table(mwanza$pa1, mwanza$case) #create contingency table (rows = categories of pa1. columns = categories of case)
print(tab)
# rows 1 to 4 only
rows <- as.character(1:4)
print(rows)
freq  <- tab[rows, "1"]      # number of cases
print(freq)
total <- rowSums(tab[rows, ])# total in each category
prop.trend.test(freq, total)
tab <- table(mwanza$pa1, mwanza$case) #create contingency table (rows = categories of pa1. columns = categories of case)
print(tab)
# rows 1 to 4 only
rows <- as.character(1:4)
print(rows)
freq  <- tab[rows, "1"]      # number of cases
print(freq)
total <- rowSums(tab[rows, ])# total in each category
print(total)
prop.trend.test(freq, total)
contingency_table <- table(mwanza$pa1, mwanza$case) #create a contingency table (cross-tabulation) of pa1 (rows) by case status (columns)
rows <- as.character(1:4) #select only the categories 1, 2, 3, and 4 of pa1. These are the ordered groups we want in the trend test.
freq <- contingency_table[rows, "1"] #extract the number of cases (column "1") for the selected pa1 categories
total <- rowSums(contingency_table[rows, ]) #calculate the total number of people in each pa1 category
prop.trend.test(freq, total) #perform the test for linear trend in proportions across the ordered categories
freq <- contingency_table[contingency_table$case == "case",3]
contingency_table <- table(mwanza$pa1, mwanza$case) #create a contingency table (cross-tabulation) of pa1 (rows) by case status (columns)
categories <- as.character(1:4) #select only the categories 1, 2, 3, and 4 of pa1. These are the ordered groups we want in the trend test.
print(categories)
freq <- contingency_table[categories, "1"] #extract the number of cases (column "1") for the selected pa1 categories
total <- rowSums(contingency_table[categories, ]) #calculate the total number of people (cases + control) in each pa1 category
prop.trend.test(freq, total) #perform the test for linear trend in proportions across the ordered categories
contingency_table <- table(mwanza$pa1, mwanza$case) #create a contingency table (cross-tabulation) of pa1 (rows) by case status (columns)
print(contingency_table)
categories <- as.character(1:4) #select only the categories 1, 2, 3, and 4 of pa1. These are the ordered groups we want in the trend test.
print(categories)
freq <- contingency_table[categories, "1"] #extract the number of cases (column "1") for the selected pa1 categories
total <- rowSums(contingency_table[categories, ]) #calculate the total number of people (cases + control) in each pa1 category
prop.trend.test(freq, total) #perform the test for linear trend in proportions across the ordered categories
# Create table without pa1 == 9
contingency_table <- table(mwanza$pa1[mwanza$pa1 != 9], mwanza$case[mwanza$pa1 != 9])
# Run trend test directly
prop.trend.test(
contingency_table[, "1"],       # cases
rowSums(contingency_table)      # totals
)
CrossTable(mwanza$ed2,
mwanza$case,
prop.r = FALSE,
prop.c = TRUE,
prop.t = FALSE,
prop.chisq = FALSE
)
babies |>
summarise_all(class)
setwd("C:/Users/deen0/OneDrive - London School of Hygiene and Tropical Medicine/Distance Learning/Course Materials/Developing EPM 102 & PHM 102 R Workbooks/EPM102  (& PHM102) R Workbook/RMD code and output")
